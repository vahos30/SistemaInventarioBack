name: Build, test, deploy ASP.NET Core app to Azure Web App - sistemainventario

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  SOLUTION_DIR: "SistemaInventarioSolution"
  API_PROJECT: "SistemaInventario.API"
  INFRASTRUCTURE_PROJECT: "SistemaInventario.Infrastructure"

jobs:
  build-and-test:
    runs-on: windows-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore ${{ env.SOLUTION_DIR }}/SistemaInventario.sln

      - name: Build solution
        run: dotnet build ${{ env.SOLUTION_DIR }}/SistemaInventario.sln --configuration Release --no-restore

      - name: Run tests
        run: dotnet test ${{ env.SOLUTION_DIR }}/SistemaInventario.sln --configuration Release --logger "trx;LogFileName=test-results.trx" --no-build

      - name: Publish test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: "**/*.trx"

      - name: Publish API project
        run: dotnet publish ${{ env.SOLUTION_DIR }}/${{ env.API_PROJECT }} -c Release -o "${{env.DOTNET_ROOT}}/myapp"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  apply-migrations:
    runs-on: windows-latest
    needs: build-and-test
    if: success()
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install EF Core CLI
        run: dotnet tool install --global dotnet-ef

      - name: Add dotnet tools to PATH
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Verify project structure
        run: |
          echo "Current directory:"
          pwd
          echo "API project contents:"
          ls -la ${{ env.SOLUTION_DIR }}/${{ env.API_PROJECT }}
          echo "Infrastructure project contents:"
          ls -la ${{ env.SOLUTION_DIR }}/${{ env.INFRASTRUCTURE_PROJECT }}

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_5334F82F540041D38035098C5574F8F8 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_4DBEE9F06EBA4B9B94109990E827EBC6 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_9081224D895B4205AEF4549CA5AE2B2C }}

      - name: Apply database migrations
        run: |
          cd ${{ env.SOLUTION_DIR }}/${{ env.API_PROJECT }}
          dotnet ef database update --project ../${{ env.INFRASTRUCTURE_PROJECT }} --connection "${{ secrets.AZURE_SQL_CONNECTION }}"
          
  deploy:
    runs-on: windows-latest
    needs: [build-and-test, apply-migrations]
    if: success()

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: .net-app
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_5334F82F540041D38035098C5574F8F8 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_4DBEE9F06EBA4B9B94109990E827EBC6 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_9081224D895B4205AEF4549CA5AE2B2C }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'sistemainventario'
          slot-name: 'Production'
          package: .
